<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="user_mapper">

<select id="getUserInfo" resultType="User">
        SELECT user_id, username, email, tel, nickname
        FROM users
        WHERE user_id = #{userId}
    </select>

    <update id="updateUserInfo" parameterType="User">
        UPDATE users
        SET
        username = #{userName},
        email = #{email},
        tel = #{tel}
        WHERE user_id = #{userId}
    </update>

    <update id="updatePassword" parameterType="User">
        UPDATE users
        SET pw = #{pw}
        WHERE user_id = #{userId}
    </update>

<!--     <update id="chargeBalance" parameterType="User">
        UPDATE users
        SET balance = balance + #{amount}
        WHERE user_id = #{userId}
    </update> -->

    <select id="getUserDetail" resultType="User">
        SELECT
        user_id AS userId,
        username AS userName,
        email,
        tel,
        nickname,
        profile_image AS profileImage,
        FROM users
        WHERE user_id = #{userId}
    </select>
<insert id="insertUser" parameterType="User">
		INSERT INTO users
		(user_id, password, username, nickname, email, tel, 
		usertype)
		VALUES
		(#{userId}, #{password}, #{userName}, #{nickName}, #{email},
		#{tel}, #{userType})
	</insert>



	<update id="updateUser" parameterType="User">
		UPDATE users
		SET username=
		#{userName}, nickname=#{nickName},<!-- password=#{password}, -->
		email= #{email}, tel=
		#{tel}<!-- , jumin=#{jumin} -->
		, user_type=#{userType}
		WHERE user_id = #{userId}
	</update>

	<delete id="deleteUser" parameterType="User">
		DELETE FROM users WHERE
		user_id = #{userId}
	</delete>

	<select id="getAllUsers" resultType="User">
		SELECT * FROM users
	</select>

	<select id="getUserByNickname" resultType="User">
		SELECT * FROM users
		WHERE nickname = #{nickName}
	</select>

	<select id="getUserByJumin" resultType="User">
		SELECT * FROM users WHERE
		jumin = #{jumin}
	</select>

	<select id="getUserByTel" resultType="User">
		SELECT * FROM users WHERE
		tel = #{tel}
	</select>

	<select id="getUserByEmail" resultType="User">
		SELECT * FROM users WHERE
		email = #{email}
	</select>

	<select id="getUserBypassword" resultType="User">
		SELECT * FROM users
		WHERE password
		= #{password}

	</select>

	<select id="getUserList" resultType="User">
		select *
		from users
	</select>

	<select id="getUserLists" resultType="User">
		select *
		from users
	</select>

	<select id="getNotifyUserList" resultType="User">
		SELECT user_id AS
		userId, username AS userName, nickname AS nickName,
		email, tel,
		user_type AS userType, report
		FROM users
		WHERE report IS NOT NULL
		ORDER
		BY report DESC
	</select>

	<select id="getUserById" resultType="User">
		SELECT * FROM users WHERE
		user_id = #{userId}
	</select>


	<update id="modifyUser" parameterType="User">
		UPDATE users
		SET
		user_type =
		#{userType}
		WHERE user_id = #{userId}
	</update>

	<update id="passwordUpdate" parameterType="map">
		UPDATE users
		SET
		password = #{password}
		WHERE user_id = #{userId}
	</update>

	<select id="isDuplUser" parameterType="map" resultType="int">
		SELECT COUNT(*) FROM users WHERE ${type} = #{value}
	</select>
	
	
	<update id="resetReport" parameterType="java.util.List">
		UPDATE users
		SET report = NULL
		WHERE user_id IN
		<foreach item="id" collection="list" open="(" separator=","
			close=")">
			#{id}
		</foreach>
	</update>

</mapper>