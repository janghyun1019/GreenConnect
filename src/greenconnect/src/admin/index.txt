내가 주는 항목들에 대한 코드를 만들어 줬으면 좋겠어
* 관리자 홈
   * 사이트 이용자 수, 일일/주간/월간 매출 통계
   * 신규 가입자 추이
   * 신고 처리 현황 및 미처리 건수 알림
   * 주요 거래 현황 요약
   * 시스템 상태 알림
* 사용자 관리
   * 판매자/구매자 계정 관리 및 승인
   * 사용자 권한 설정 및 계정 정지/제재 기능
   * 사용자 활동 로그 및 통계 확인
* 거래 관리
   * 주문 현황 실시간 모니터링
   * 결제 처리 및 정산 관리
   * 배송 상태 추적
   * 분쟁 및 환불 처리
   * 거래 취소/환불 내역 관리
* 품질 관리
   * 판매자 평가 시스템 관리
   * 리뷰 및 평점 관리
   * 품질 인증서 및 농산물 이력 관리
* 시스템 설정
   * 멤버쉽 및 정책 설정
   * 사이트 디자인 및 콘텐츠 관리
   * 메인 페이지 배너 관리
   * 서버 상태 및 보안 모니터링
   * 공지사항 관리
* 고객 지원 (강화)
   * 문의 및 신고 관리
   * 신고된 상품 검토 및 삭제 처리
   * 신고된 사용자 검토 및 제재 처리
   * FAQ 및 도움말 콘텐츠 관리
   * 신고 유형별 통계 및 분석
   * 자동 응답 시스템 설정
   * 신고 처리 히스토리 관리
사용도구
   * 프론트:리액트,node,axios등 (("proxy": "http://localhost:8080")를 통해 연결)
   * 백엔드:Eclipse(java),maven,mybatis
   * 데이터:oracle develop
      //현재 제작한 데이터 테이블은 다음과 같고 그것을 참고하면서 수정하지 말고 만들어보고 없을시 새로운 단일 테이블을 제작할 것
      CREATE TABLE users
(
user_id varchar(24) primary key,
password varchar(64) not null,
username varchar(36) not null,
nickname varchar(36) not null UNIQUE,
email varchar(36) not null UNIQUE,
tel varchar(16) not null UNIQUE,
usertype varchar(12) ,
signup TIMESTAMP DEFAULT SYSTIMESTAMP,
terms TIMESTAMP DEFAULT SYSTIMESTAMP --약관동의시간
);

CREATE TABLE user_profile (
    user_id    NUMBER PRIMARY KEY,
    image_url  VARCHAR2(255)
);

CREATE TABLE post
(
  post_id varchar2(64) primary key,
  user_id varchar2(32),
  nick_name varchar2(32),
  board_id number,
  post_product_type varchar2(100), -- 품목 타입 (옥수수,감자,포도..)
  post_title varchar2(100) not null,
  post_content varchar2(3000) not null,
  url_file_path varchar2(500), -- 썸네일용
  post_sales_unit varchar2(100), -- 판매수량 (500g, 1kg ..)
  post_price varchar2(64), -- 판매수량당 가격
  post_spot varchar2(500), -- 판매자 주소
  post_cost varchar2(64), -- 배송비
  store_id varchar2(500), -- 판매자 가게  이름
  post_create_at TIMESTAMP DEFAULT SYSTIMESTAMP, -- 판매글 작성 시간
  post_views number DEFAULT '0' NOT NULL, -- 조회수
  post_state varchar2(10) DEFAULT 'Y'  --상태관리: 게시글 삭제하거나 정지되면 N으로 변경
);

CREATE TABLE POSTS (
    POST_ID VARCHAR2(255) PRIMARY KEY,
    USER_ID VARCHAR2(255),
    TITLE VARCHAR2(255),
    CONTENT CLOB,
    CREATED_AT TIMESTAMP
);

CREATE SEQUENCE POSTS_SEQ
START WITH 1
INCREMENT BY 1;

-- 트리거 생성
CREATE OR REPLACE TRIGGER POSTS_BEFORE_INSERT
BEFORE INSERT ON POSTS
FOR EACH ROW
BEGIN
    SELECT POSTS_SEQ.NEXTVAL
    INTO :NEW.POST_ID
    FROM DUAL;
END;

CREATE TABLE address (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id VARCHAR(100) NOT NULL,
    postal_code VARCHAR(10) NOT NULL,
    address1 VARCHAR(255) NOT NULL,
    address2 VARCHAR(255),
    receiver VARCHAR(100) NOT NULL,
    phone VARCHAR(20) NOT NULL,
    is_default BOOLEAN DEFAULT FALSE,
    INDEX idx_user_id (user_id)
);

create sequence post_id_seq
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;

create table image
(
    image_id number primary key,
    post_id varchar2(32) not null,
    file_name VARCHAR2(255) NOT NULL,  -- 저장된 파일명
    original_file_name VARCHAR2(255) NOT NULL,  -- 원본 파일명
    file_path VARCHAR2(500) NOT NULL,  -- 파일 경로
    url_file_path VARCHAR2(500) NOT NULL,       -- URL 경로 (웹에서 접근할 경우)
    file_extension VARCHAR2(10), -- 확장자
    uploaded_at TIMESTAMP DEFAULT SYSTIMESTAMP -- 업로드 시간
);

create sequence images_id_seq
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE BUY (
    buy_id      NUMBER PRIMARY KEY,
    user_id     VARCHAR2(50) NOT NULL,   -- 사용자 ID
    nick_name   VARCHAR2(50) NOT NULL,   -- 닉네임
    board_id    NUMBER NOT NULL,         -- 게시판 ID
    post_id     VARCHAR2(50) NOT NULL,         -- 게시글 ID (숫자로 저장)
    buy_count   VARCHAR2(50) NOT NULL,         -- 구매 수량 (숫자로 저장)
    total_price VARCHAR2(50) NOT NULL,         -- 총 가격 (숫자로 저장)
    total_gram    VARCHAR2(50) NOT NULL,         -- 총 주문량 (숫자로 저장)
    created_at  TIMESTAMP DEFAULT SYSTIMESTAMP  -- 주문 날짜 (기본값: 현재 시간)
);

create sequence buy_id_seq
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE Table user_report(
  user_id varchar2(32) not null, -- 신고하는 유저아이디
  reported_user_id varchar2 (32) not null, --신고당하는 유저아이디
  reported_user_nick_name varchar2 (32) not null, -- 신고당하는 유저닉네임
  reported_post_id varchar2 (32), -- 신고당하는 포스트아이디
  report_content varchar2(1000) not null, -- 신고사유
  report_result varchar2(32) -- 신고 결과
  report_creat_At TIMESTAMP default SYSTIMESTAMP --신고시간
);

CREATE Table report(
  report_id number primary key, -- 시퀀스
  reported_user_id varchar2(32),
  report_count number, -- 신고당한 횟수
  report_punish varchar2(32) -- 처벌
  
);

create sequence report_id_seq
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE TABLE AdminDashboard (
    stat_id NUMBER PRIMARY KEY,
    user_count NUMBER,
    daily_sales NUMBER(10,2),
    weekly_sales NUMBER(10,2),
    monthly_sales NUMBER(10,2),
    new_users NUMBER,
    pending_reports NUMBER,
    transaction_count NUMBER,
    system_status VARCHAR2(50),
    update_time TIMESTAMP DEFAULT SYSTIMESTAMP
);

SELECT ---------------------- 구매자가 구매했을때 구매자정보와 해당판매글의 판매자아이디, 글제목, 상품타입, 판매자 주소, 농장이름, 판매상태 불러오는 쿼리
    b.buy_id,
    b.user_id AS buy_user_id,
    b.nick_name AS buy_nick_name,
    b.board_id,
    b.post_id,
    b.buy_count,
    b.total_price,
    b.total_gram,
    b.created_at AS buy_created_at,
    p.user_id AS post_user_id,
    p.post_title,
    p.post_product_type,
    p.post_spot,
    p.store_id,
    p.post_state
FROM 
    buy b
JOIN 
    post p ON b.post_id = p.post_id;

CREATE Table jjim (
  post_id varchar2(32),
  user_id varchar2(32),
  CONSTRAINT jjim_unique UNIQUE (post_id, user_id) -- postid와userid 묶어서 유니크
);
select * from jjim;
   * 주의점:프론트 쪽은 토큰식이며 로그인부분은 다른 사람이 할 예정이니 건드리지 말것,백엔드는 mapper,controller,dto,dao(impl),service(impl)이 기본 구조에 entity사용금지,controller은 getMapping과 postMapping만을 사용할것,SqlSessionTemplate을 사용할것,impl이 아닌 dao와 service는 복사 붙여넣기를 해도 무방할 정도로 같을것, mybatis-config에서 dto경로를 지정해 놓을 예정이니 경로를 mapper에 그대로 적어놓지 않을것과 value="/WEB-INF/mybatis/mapper/**/_mapper.xml"*>가 기본이니 숙지 하며 @mapper은 사용금지<Table>,<TableHeader>,<TableRow>등을 쓰지말고 <div> 위주로 진행할것,oracle developer의 데이터 테이블은 왠만하면 단일 테이블로 처리하도록 할것,@data를 사용할 예정이니 굳이 getter,setter을 사용안해도 됨
            <div className="adminAside">
                <ul>
                    <li><Link to="/Admin">관리자 홈</Link></li>
                    <li><Link to="/Customer">사용자관리</Link></li>
                    <li><Link to="/Trade">거래관리</Link></li>
                    <li><Link to="/Quality">품질관리</Link></li>
                    <li><Link to="/System">시스템설정</Link></li>
                    <li><Link to="/CuSupport">고객지원</Link></li>
                </ul>
            </div>
            구조의 사이드도 필수적으로 들어가 있을 것, 코드 부분이 어떤 역할을 하는지에대한 주석도 제대로 적어놓을 것
